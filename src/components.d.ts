/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface AndreAccordion {
        "description": string;
        "label": string;
        "width": string;
    }
    interface AndreComponent {
        "titolo": string;
    }
    interface InlineEdit {
        "scritta": string;
    }
    interface MyAccordion {
    }
    interface MyTab {
        "disabled": boolean;
        "name": string;
        "tabKey": number;
    }
    interface MyTabs {
        "defaultActive": number;
    }
    interface ToggleBtn {
    }
    interface WrapperAccordion {
    }
}
declare global {
    interface HTMLAndreAccordionElement extends Components.AndreAccordion, HTMLStencilElement {
    }
    var HTMLAndreAccordionElement: {
        prototype: HTMLAndreAccordionElement;
        new (): HTMLAndreAccordionElement;
    };
    interface HTMLAndreComponentElement extends Components.AndreComponent, HTMLStencilElement {
    }
    var HTMLAndreComponentElement: {
        prototype: HTMLAndreComponentElement;
        new (): HTMLAndreComponentElement;
    };
    interface HTMLInlineEditElement extends Components.InlineEdit, HTMLStencilElement {
    }
    var HTMLInlineEditElement: {
        prototype: HTMLInlineEditElement;
        new (): HTMLInlineEditElement;
    };
    interface HTMLMyAccordionElement extends Components.MyAccordion, HTMLStencilElement {
    }
    var HTMLMyAccordionElement: {
        prototype: HTMLMyAccordionElement;
        new (): HTMLMyAccordionElement;
    };
    interface HTMLMyTabElement extends Components.MyTab, HTMLStencilElement {
    }
    var HTMLMyTabElement: {
        prototype: HTMLMyTabElement;
        new (): HTMLMyTabElement;
    };
    interface HTMLMyTabsElement extends Components.MyTabs, HTMLStencilElement {
    }
    var HTMLMyTabsElement: {
        prototype: HTMLMyTabsElement;
        new (): HTMLMyTabsElement;
    };
    interface HTMLToggleBtnElement extends Components.ToggleBtn, HTMLStencilElement {
    }
    var HTMLToggleBtnElement: {
        prototype: HTMLToggleBtnElement;
        new (): HTMLToggleBtnElement;
    };
    interface HTMLWrapperAccordionElement extends Components.WrapperAccordion, HTMLStencilElement {
    }
    var HTMLWrapperAccordionElement: {
        prototype: HTMLWrapperAccordionElement;
        new (): HTMLWrapperAccordionElement;
    };
    interface HTMLElementTagNameMap {
        "andre-accordion": HTMLAndreAccordionElement;
        "andre-component": HTMLAndreComponentElement;
        "inline-edit": HTMLInlineEditElement;
        "my-accordion": HTMLMyAccordionElement;
        "my-tab": HTMLMyTabElement;
        "my-tabs": HTMLMyTabsElement;
        "toggle-btn": HTMLToggleBtnElement;
        "wrapper-accordion": HTMLWrapperAccordionElement;
    }
}
declare namespace LocalJSX {
    interface AndreAccordion {
        "description"?: string;
        "label"?: string;
        "onOnToggle"?: (event: CustomEvent<any>) => void;
        "width"?: string;
    }
    interface AndreComponent {
        "titolo"?: string;
    }
    interface InlineEdit {
        "onOnToggle"?: (event: CustomEvent<any>) => void;
        "scritta"?: string;
    }
    interface MyAccordion {
    }
    interface MyTab {
        "disabled"?: boolean;
        "name"?: string;
        "tabKey"?: number;
    }
    interface MyTabs {
        "defaultActive"?: number;
        "onChanged"?: (event: CustomEvent<any>) => void;
    }
    interface ToggleBtn {
        "onOnToggle"?: (event: CustomEvent<any>) => void;
    }
    interface WrapperAccordion {
    }
    interface IntrinsicElements {
        "andre-accordion": AndreAccordion;
        "andre-component": AndreComponent;
        "inline-edit": InlineEdit;
        "my-accordion": MyAccordion;
        "my-tab": MyTab;
        "my-tabs": MyTabs;
        "toggle-btn": ToggleBtn;
        "wrapper-accordion": WrapperAccordion;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "andre-accordion": LocalJSX.AndreAccordion & JSXBase.HTMLAttributes<HTMLAndreAccordionElement>;
            "andre-component": LocalJSX.AndreComponent & JSXBase.HTMLAttributes<HTMLAndreComponentElement>;
            "inline-edit": LocalJSX.InlineEdit & JSXBase.HTMLAttributes<HTMLInlineEditElement>;
            "my-accordion": LocalJSX.MyAccordion & JSXBase.HTMLAttributes<HTMLMyAccordionElement>;
            "my-tab": LocalJSX.MyTab & JSXBase.HTMLAttributes<HTMLMyTabElement>;
            "my-tabs": LocalJSX.MyTabs & JSXBase.HTMLAttributes<HTMLMyTabsElement>;
            "toggle-btn": LocalJSX.ToggleBtn & JSXBase.HTMLAttributes<HTMLToggleBtnElement>;
            "wrapper-accordion": LocalJSX.WrapperAccordion & JSXBase.HTMLAttributes<HTMLWrapperAccordionElement>;
        }
    }
}
